package main

import (
	"context"
	bookv1 "github.com/SebastienMelki/iskandaria/api/contracts/book/v1"
	corev1 "github.com/SebastienMelki/iskandaria/api/contracts/core/v1"
	"log"
	"net/http"
)

type BookService struct{}

func (b BookService) GetBooks(ctx context.Context, request *bookv1.GetBooksRequest) (*bookv1.GetBooksResponse, error) {
	return &bookv1.GetBooksResponse{
		Books: []*bookv1.Book{
			{
				Id: &corev1.BookID{
					Value: request.BookIdList[0].Value,
				},
				Title: &corev1.TranslatedString{
					Translations: []*corev1.Translation{
						{
							Language: corev1.Language_LANGUAGE_ARABIC,
							Text:     "bla",
						},
					},
				},
				ReleaseYear: 1995,
			},
		},
	}, nil
}

func main() {

	mux := http.NewServeMux()

	// Register the HTTP handlers (generated by protoc-gen-go-http)
	if err := bookv1.RegisterBookServiceServer(&BookService{}, bookv1.WithMux(mux)); err != nil {
		log.Fatal(err)
	}

	log.Fatal(http.ListenAndServe(":8080", mux))

	select {}
}
